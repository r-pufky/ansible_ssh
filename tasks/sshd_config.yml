---
# yamllint disable rule:line-length
###############################################################################
# SSHD Configuration (sshd_config)
###############################################################################
# Configure SSHD service.
#
# User specified files are created before configuring sshd_config and not in
# host_keys to ensure configuration checks do not fail.

- name: 'SSHD config | manage sshd banner'
  ansible.builtin.include_tasks: 'manage_file.yml'
  vars:
    managed_file_contents: '{{ ssh_server_banner }}'
    managed_file_name: 'ssh_server_banner'
    managed_file_path: '/etc/ssh/ssh_server_banner'

- name: 'SSHD config | manage host certificate'
  ansible.builtin.include_tasks: 'manage_file.yml'
  vars:
    managed_file_contents: '{{ ssh_server_host_certificate }}'
    managed_file_name: 'ssh_server_host_certificate'
    managed_file_path: '/etc/ssh/ssh_server_host_certificate'

- name: 'SSHD config | manage host key'
  ansible.builtin.include_tasks: 'manage_file.yml'
  vars:
    managed_file_contents: '{{ ssh_server_host_key }}'
    managed_file_name: 'ssh_server_host_key'
    managed_file_path: '/etc/ssh/ssh_server_host_key'
    managed_file_owner: 'root'
    managed_file_group: 'root'
    managed_file_mode: '0400'

- name: 'SSHD config | manage trusted user CA keys'
  ansible.builtin.include_tasks: 'manage_file.yml'
  vars:
    managed_file_contents: '{{ ssh_server_trusted_user_ca_keys }}'
    managed_file_name: 'ssh_server_trusted_user_ca_keys'
    managed_file_path: '/etc/ssh/ssh_server_trusted_user_ca_keys'
    managed_file_owner: 'root'
    managed_file_group: 'root'
    managed_file_mode: '0400'

- name: 'SSHD config | set /etc/ssh/sshd_config'
  ansible.builtin.template:
    src: 'sshd_config.j2'
    dest: '/etc/ssh/sshd_config'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Handlers | restart SSH'

- name: 'SSHD config | local'
  ansible.builtin.include_tasks: 'local_config.yml'
  vars:
    include: '{{ ssh_server_include[0] | default("/etc/ssh/sshd_config.d") | dirname }}'
    config: '{{ local.config }}'
    state: '{{ local.state | default("present") }}'
    options: '{{ local.options }}'
  loop: '{{ ssh_server_include_files | default([]) }}'
  loop_control:
    loop_var: local
